{"version":3,"sources":["Table/Table.js","Loader/Loader.js","DetailRowView/DetailRowView.js","App.js","index.js"],"names":["Table","props","className","onClick","onSort","bind","sortField","sort","data","map","item","key","id","email","onRowSelect","firstName","lastName","phone","Loader","DetailRowView","person","description","address","streetAddress","city","state","zip","App","isLoading","row","console","log","cloneData","concat","sortType","orderedData","_","orderBy","setState","fetch","response","json","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6VA6CeA,MA1Cf,SAAeC,GAEX,OACI,2BAAOC,UAAU,oBACb,oDACA,+BACA,4BACI,wBAAIC,QAASF,EAAMG,OAAOC,KAAK,KAAM,OAArC,MAC4B,OAApBJ,EAAMK,UAAqB,+BAASL,EAAMM,MAAiB,MAEnE,wBAAIJ,QAASF,EAAMG,OAAOC,KAAK,KAAM,cAArC,cACoC,cAApBJ,EAAMK,UAA4B,+BAASL,EAAMM,MAAiB,MAElF,wBAAIJ,QAASF,EAAMG,OAAOC,KAAK,KAAM,aAArC,aACmC,aAApBJ,EAAMK,UAA2B,+BAASL,EAAMM,MAAiB,MAEhF,wBAAIJ,QAASF,EAAMG,OAAOC,KAAK,KAAM,UAArC,UACgC,UAApBJ,EAAMK,UAAwB,+BAASL,EAAMM,MAAiB,MAE1E,wBAAIJ,QAASF,EAAMG,OAAOC,KAAK,KAAM,UAArC,SAC+B,UAApBJ,EAAMK,UAAwB,+BAASL,EAAMM,MAAiB,QAI7E,+BACEN,EAAMO,KAAKC,KAAI,SAAAC,GAAI,OACjB,wBAAIC,IAAKD,EAAKE,GAAKF,EAAKG,MAAOV,QAASF,EAAMa,YAAYT,KAAK,KAAMK,IACjE,4BAAKA,EAAKE,IACV,4BAAKF,EAAKK,WACV,4BAAKL,EAAKM,UACV,4BAAKN,EAAKG,OACV,4BAAKH,EAAKO,c,MCzBfC,MANf,WACI,OACI,yBAAKhB,UAAU,mB,sBC6BRiB,MA/Bf,YAAkC,IAAVC,EAAS,EAATA,OAEpB,OACI,yBAAKlB,UAAU,mBACX,kDACA,6BACI,yCACe,2BAAIkB,EAAOL,UAAY,IAAMK,EAAOJ,WAGnD,2CALJ,IAKwB,6BACpB,2BACKI,EAAOC,aAEZ,uCACa,2BAAID,EAAOE,QAAQC,gBAEhC,oCACU,2BAAIH,EAAOE,QAAQE,OAE7B,qCACW,2BAAIJ,EAAOE,QAAQG,QAE9B,wCACc,2BAAIL,EAAOE,QAAQI,SC8ClCC,E,2MAhEXF,MAAO,CACHG,WAAW,EACXpB,KAAM,GACND,KAAM,MACND,UAAW,KACXuB,IAAK,M,EAcTzB,OAAS,SAAAE,GACLwB,QAAQC,IAAIzB,GAEZ,IAAM0B,EAAY,EAAKP,MAAMjB,KAAKyB,SAC5BC,EAA+B,QAApB,EAAKT,MAAMlB,KAAiB,OAAS,MAChD4B,EAAcC,IAAEC,QAAQL,EAAW1B,EAAW4B,GAEpD,EAAKI,SAAS,CACV9B,KAAM2B,EACN5B,KAAM2B,EACN5B,e,EAIRQ,YAAc,SAAAe,GACVC,QAAQC,IAAIF,GAEZ,EAAKS,SAAS,CAACT,S,qNA3BQU,MAAM,mM,cAAvBC,E,gBACaA,EAASC,O,OAAtBjC,E,OACNsB,QAAQC,IAAIvB,GAEZkC,KAAKJ,SAAS,CACVV,WAAW,EACXpB,KAAM4B,IAAEC,QAAQ7B,EAAMkC,KAAKjB,MAAMnB,UAAWoC,KAAKjB,MAAMlB,Q,qIAyB/D,OACI,yBAAKL,UAAU,aAEPwC,KAAKjB,MAAMI,IAAM,kBAAC,EAAD,CAAeT,OAAQsB,KAAKjB,MAAMI,MAAS,KAI5Da,KAAKjB,MAAMG,UACL,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEpB,KAAMkC,KAAKjB,MAAMjB,KACjBJ,OAAQsC,KAAKtC,OACbG,KAAMmC,KAAKjB,MAAMlB,KACjBD,UAAWoC,KAAKjB,MAAMnB,UACtBQ,YAAa4B,KAAK5B,mB,GAxDxB6B,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.75fd34f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Table.css';\r\n\r\nfunction Table(props) {\r\n\r\n    return(\r\n        <table className=\"table table_dark\">\r\n            <caption>Table React App</caption>\r\n            <thead>\r\n            <tr>\r\n                <th onClick={props.onSort.bind(null, 'id')}>\r\n                    ID {props.sortField === 'id' ? <small>{ props.sort }</small> : null}\r\n                </th>\r\n                <th onClick={props.onSort.bind(null, 'firstName')}>\r\n                    First Name {props.sortField === 'firstName' ? <small>{ props.sort }</small> : null}\r\n                </th>\r\n                <th onClick={props.onSort.bind(null, 'lastName')}>\r\n                    Last Name {props.sortField === 'lastName' ? <small>{ props.sort }</small> : null}\r\n                </th>\r\n                <th onClick={props.onSort.bind(null, 'email')}>\r\n                    E-Mail {props.sortField === 'email' ? <small>{ props.sort }</small> : null}\r\n                </th>\r\n                <th onClick={props.onSort.bind(null, 'phone')}>\r\n                    Phone {props.sortField === 'phone' ? <small>{ props.sort }</small> : null}\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            { props.data.map(item => (\r\n                <tr key={item.id + item.email} onClick={props.onRowSelect.bind(null, item)}>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.firstName}</td>\r\n                    <td>{item.lastName}</td>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.phone}</td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n\r\n        </table>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport './Loader.css';\r\n\r\nfunction Loader() {\r\n    return(\r\n        <div className=\"lds-dual-ring\" />\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './DetailRowView.css'\r\n\r\nfunction DetailRowView({person}) {\r\n\r\n    return(\r\n        <div className=\"detail-row-view\">\r\n            <h2>Details about User</h2>\r\n            <div>\r\n                <p>\r\n                    View user: <b>{person.firstName + ' ' + person.lastName}</b>\r\n                </p>\r\n\r\n                <b>Description:</b> <br/>\r\n                <p>\r\n                    {person.description}\r\n                </p>\r\n                <p>\r\n                    Address: <b>{person.address.streetAddress}</b>\r\n                </p>\r\n                <p>\r\n                    City: <b>{person.address.city}</b>\r\n                </p>\r\n                <p>\r\n                    State: <b>{person.address.state}</b>\r\n                </p>\r\n                <p>\r\n                    Zip code: <b>{person.address.zip}</b>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailRowView;","import React from 'react';\nimport './App.css';\nimport Table from './Table/Table';\nimport Loader from './Loader/Loader';\nimport _ from 'lodash';\nimport DetailRowView from './DetailRowView/DetailRowView';\n\nclass App extends React.Component{\n\n    state ={\n        isLoading: true,\n        data: [],\n        sort: 'asc', // 'desc'\n        sortField: 'id',\n        row: null,\n    };\n\n    async componentDidMount() {\n        const response = await fetch(\"http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\")\n        const data = await response.json();\n        console.log(data);\n\n        this.setState({\n            isLoading: false,\n            data: _.orderBy(data, this.state.sortField, this.state.sort)\n        });\n    }\n\n    onSort = sortField => {\n        console.log(sortField)\n\n        const cloneData = this.state.data.concat();\n        const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\n        const orderedData = _.orderBy(cloneData, sortField, sortType);\n\n        this.setState({\n            data: orderedData,\n            sort: sortType,\n            sortField\n        })\n    };\n\n    onRowSelect = row => {\n        console.log(row);\n\n        this.setState({row})\n    };\n\n  render() {\n    return (\n        <div className=\"container\">\n            {\n                this.state.row ? <DetailRowView person={this.state.row}/> : null\n            }\n\n            {\n                this.state.isLoading\n                    ? <Loader/>\n                    : <Table\n                        data={this.state.data}\n                        onSort={this.onSort}\n                        sort={this.state.sort}\n                        sortField={this.state.sortField}\n                        onRowSelect={this.onRowSelect}\n                    />\n            }\n\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}